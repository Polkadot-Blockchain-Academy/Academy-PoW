---
name: E2E tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:

  build-node:
    runs-on: ubuntu-latest
    steps:

      - name: Install protoc compiler
        shell: bash
        run: |
          sudo apt-get install -y protobuf-compiler

      - name: Checkout Source code
        uses: actions/checkout@v3

      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            /tmp/academy-pow/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-v1

      - name: Install Rust toolchain
        uses: Cardinal-Cryptography/github-actions/install-rust-toolchain@v1

      # When testing the CI, I can't wait for the whole node to be built each time (especially because it hasn't changed on this branch)
      # So for now I'll just use the public docker image.
      # TODO revert this before merging
      # - name: build release binary
      #   run: make release

      # - name: Run a node
      #   shell: bash
      #   run: ./target/release/academy-pow --chain local --alice

      - name: Run a node (FROM DOCKER. REVERT THIS.)
        shell: bash
        run: |
           docker run --network=host  ghcr.io/polkadot-blockchain-academy/academy-pow:joshy-publish-docker-image
      #################
      - name: Verify chain responds
        shell: bash
        run: |
           alias curl='docker run -it --rm curlimages/curl:8.1.2'
           curl --retry 12 --retry-all-errors --retry-delay 3 -H "Content-Type: application/json" -d '{ "id": 1, "jsonrpc": "2.0", "method": "rpc_methods"}' http://127.0.0.1:9933

      - name: Install polkadot js cli utility
        run: |
           npm install --location=global @polkadot/api-cli
           
      - name: Verify contract interaction
        shell: bash
        run: ./.github/scripts/interact-with-contract.sh

#      - name: Deploy contracts
#        shell: bash
#        run: ./scripts/deploy.sh
#
#      - name: Test basic contract interactions
#        shell: bash
#        run: ./scripts/interact.sh
